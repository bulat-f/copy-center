{"ast":null,"code":"var _jsxFileName = \"/home/bulat/copy-center/packages/client-web/src/components/FileInput.tsx\";\nimport React, { Fragment, useRef, useCallback } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nexport const FileInput = ({\n  name\n}) => {\n  const inputRef = useRef(null);\n  const handleClick = useCallback(() => inputRef.current.click());\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"file\",\n    name: name,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Add file\"));\n};","map":{"version":3,"sources":["/home/bulat/copy-center/packages/client-web/src/components/FileInput.tsx"],"names":["React","Fragment","useRef","useCallback","Button","FileInput","name","inputRef","handleClick","current","click"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAMA,OAAO,MAAMC,SAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACvD,QAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMM,WAAW,GAAGL,WAAW,CAAC,MAAMI,QAAQ,CAACE,OAAT,CAAiBC,KAAjB,EAAP,CAA/B;AACA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,GAAG,EAAEH,QAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,IAAI,EAAED,IAAxC;AAA8C,IAAA,MAAM,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD,CATM","sourcesContent":["import React, { Fragment, useRef, useCallback } from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\ninterface IProps {\n  name: string;\n}\n\nexport const FileInput: React.FC<IProps> = ({ name }) => {\n  const inputRef = useRef(null);\n  const handleClick = useCallback(() => inputRef.current.click());\n  return (\n    <Fragment>\n      <input ref={inputRef} type=\"file\" name={name} hidden />\n      <Button>Add file</Button>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}