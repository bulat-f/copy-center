{"ast":null,"code":"var _jsxFileName = \"/home/bulat/copy-center/packages/client-web/src/components/FileInput.tsx\";\nimport React, { Fragment, useRef, useCallback } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nexport const FileInput = ({\n  name,\n  onAddFiles\n}) => {\n  const inputRef = useRef(null);\n  const handleClick = useCallback(() => inputRef.current && inputRef.current.click(), [inputRef]);\n  const handleAddFiles = useCallback(event => {\n    onAddFiles(event.target.files);\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"file\",\n    name: name,\n    hidden: true,\n    onChange: handleAddFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Add file\"));\n};","map":{"version":3,"sources":["/home/bulat/copy-center/packages/client-web/src/components/FileInput.tsx"],"names":["React","Fragment","useRef","useCallback","Button","FileInput","name","onAddFiles","inputRef","handleClick","current","click","handleAddFiles","event","target","files"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAOA,OAAO,MAAMC,SAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AACnE,QAAMC,QAAQ,GAAGN,MAAM,CAAmB,IAAnB,CAAvB;AACA,QAAMO,WAAW,GAAGN,WAAW,CAC7B,MAAMK,QAAQ,CAACE,OAAT,IAAoBF,QAAQ,CAACE,OAAT,CAAiBC,KAAjB,EADG,EAE7B,CAACH,QAAD,CAF6B,CAA/B;AAIA,QAAMI,cAAc,GAAGT,WAAW,CAAEU,KAAD,IAAW;AAC5CN,IAAAA,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFiC,EAE/B,EAF+B,CAAlC;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEP,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,MAAM,MAJR;AAKE,IAAA,QAAQ,EAAEM,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CADF;AAYD,CAtBM","sourcesContent":["import React, { Fragment, useRef, useCallback } from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\ninterface IProps {\n  name: string;\n  onAddFiles: (files: any[]) => void;\n}\n\nexport const FileInput: React.FC<IProps> = ({ name, onAddFiles }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleClick = useCallback(\n    () => inputRef.current && inputRef.current.click(),\n    [inputRef]\n  );\n  const handleAddFiles = useCallback((event) => {\n    onAddFiles(event.target.files);\n  }, []);\n\n  return (\n    <Fragment>\n      <input\n        ref={inputRef}\n        type=\"file\"\n        name={name}\n        hidden\n        onChange={handleAddFiles}\n      />\n      <Button onClick={handleClick}>Add file</Button>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}